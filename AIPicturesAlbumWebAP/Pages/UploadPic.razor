@page "/UploadPic"
@using AIPicturesAlbumWebAP.Data
@using System.Security.Claims
@using AIPicturesAlbumWebAP.Data.Model
@using Microsoft.AspNetCore.Components.Authorization
@using ImageMagick
@inject AuthenticationStateProvider authenticationStateProvider
@inject IPictureAppService pictureAppService
@inject IUserAppService userAppService
@inject NavigationManager navManager

<h3>UploadPic</h3>
<Toasts class="p-3" Messages="messages" AutoHide="true" Delay=2000 Placement="ToastsPlacement.TopCenter" />

<InputFile OnChange="@LoadFiles" multiple />
<label>@hint</label>

@code {
    List<ToastMessage> messages = new List<ToastMessage>();
    private string hint = string.Empty;
    private IBrowserFile browserFile;

    protected override async Task OnInitializedAsync()
    {
        if (!userAppService.CheckLoginState())
        {
            navManager.NavigateTo("/");//https://www.syncfusion.com/faq/blazor/routing/how-can-i-redirect-to-another-page-in-blazor
        }
    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        hint = "上傳中...";
        browserFile = e.File;
        var stream = browserFile.OpenReadStream(maxAllowedSize: 512000000);

        var readSettings = new MagickReadSettings() { Format = MagickFormat.Jpeg, Interlace = Interlace.Jpeg };
        var memStream = new MemoryStream();
        var sourceStream = new MemoryStream();
        await stream.CopyToAsync(memStream);
        memStream.Position = 0;
        using var thumb = new MagickImage(memStream, readSettings);
        var size = new MagickGeometry(thumb.Width / 6, thumb.Height / 6)
        {
            IgnoreAspectRatio = true
        };
        thumb.Write(sourceStream);
        thumb.Resize(size);
        string guid = Guid.NewGuid().ToString();
        PictureData thumbPicData = new PictureData
        {
            Desc = string.Empty,
            FileName = "thumb_" + $"{guid}_" + browserFile.Name,
            ImageUrl = PictureRepository.CDNDomain + "thumb_" + $"{guid}_" + browserFile.Name,
            IsThumb = true,
            ThumbUrl = string.Empty,
            Title = string.Empty
        };

        Stream? thumbStream = new MemoryStream();
        thumb.Write(thumbStream);
        //image.Save(thumbStream, ImageFormat.Jpeg);
        thumbStream.Position = 0;
        await pictureAppService.AddPicData(thumbPicData, thumbStream);

        //Picture
        PictureData pictureData = new PictureData
        {
            Desc = string.Empty,
            FileName = $"{guid}_"+browserFile.Name,
            ImageUrl = PictureRepository.CDNDomain + $"{guid}_" + browserFile.Name,
            Title = string.Empty,
            ThumbGuid = thumbPicData.RowKey,
            ThumbUrl = thumbPicData.ImageUrl,
            IsThumb = false
        };
        sourceStream.Position = 0;
        await pictureAppService.AddPicData(pictureData, sourceStream);

        Task.WaitAll();
        thumbStream.Close();
        stream.Close();
        messages.Add(CreateToastMessage(ToastType.Info));
        hint = "上傳完成";
    }

    private ToastMessage CreateToastMessage(ToastType toastType)
    => new ToastMessage
    {
        Type = toastType,
        Message = $"File Uploaded. DateTime: {DateTime.Now}",
    };
}
